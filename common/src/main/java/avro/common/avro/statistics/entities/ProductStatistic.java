/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package common.avro.statistics.entities;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductStatistic extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7366592390553978270L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductStatistic\",\"namespace\":\"common.avro.statistics.entities\",\"fields\":[{\"name\":\"product_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"product_title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"count_one\",\"type\":\"int\"},{\"name\":\"count_two\",\"type\":\"int\"},{\"name\":\"count_three\",\"type\":\"int\"},{\"name\":\"count_four\",\"type\":\"int\"},{\"name\":\"count_five\",\"type\":\"int\"},{\"name\":\"total_reviews\",\"type\":\"long\"},{\"name\":\"total_rating\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductStatistic> ENCODER =
      new BinaryMessageEncoder<ProductStatistic>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductStatistic> DECODER =
      new BinaryMessageDecoder<ProductStatistic>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductStatistic> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductStatistic> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductStatistic> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductStatistic>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductStatistic to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductStatistic from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductStatistic instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductStatistic fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String product_id;
  @Deprecated public java.lang.String product_title;
  @Deprecated public int count_one;
  @Deprecated public int count_two;
  @Deprecated public int count_three;
  @Deprecated public int count_four;
  @Deprecated public int count_five;
  @Deprecated public long total_reviews;
  @Deprecated public long total_rating;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductStatistic() {}

  /**
   * All-args constructor.
   * @param product_id The new value for product_id
   * @param product_title The new value for product_title
   * @param count_one The new value for count_one
   * @param count_two The new value for count_two
   * @param count_three The new value for count_three
   * @param count_four The new value for count_four
   * @param count_five The new value for count_five
   * @param total_reviews The new value for total_reviews
   * @param total_rating The new value for total_rating
   */
  public ProductStatistic(java.lang.String product_id, java.lang.String product_title, java.lang.Integer count_one, java.lang.Integer count_two, java.lang.Integer count_three, java.lang.Integer count_four, java.lang.Integer count_five, java.lang.Long total_reviews, java.lang.Long total_rating) {
    this.product_id = product_id;
    this.product_title = product_title;
    this.count_one = count_one;
    this.count_two = count_two;
    this.count_three = count_three;
    this.count_four = count_four;
    this.count_five = count_five;
    this.total_reviews = total_reviews;
    this.total_rating = total_rating;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return product_id;
    case 1: return product_title;
    case 2: return count_one;
    case 3: return count_two;
    case 4: return count_three;
    case 5: return count_four;
    case 6: return count_five;
    case 7: return total_reviews;
    case 8: return total_rating;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: product_id = (java.lang.String)value$; break;
    case 1: product_title = (java.lang.String)value$; break;
    case 2: count_one = (java.lang.Integer)value$; break;
    case 3: count_two = (java.lang.Integer)value$; break;
    case 4: count_three = (java.lang.Integer)value$; break;
    case 5: count_four = (java.lang.Integer)value$; break;
    case 6: count_five = (java.lang.Integer)value$; break;
    case 7: total_reviews = (java.lang.Long)value$; break;
    case 8: total_rating = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'product_id' field.
   * @return The value of the 'product_id' field.
   */
  public java.lang.String getProductId() {
    return product_id;
  }


  /**
   * Sets the value of the 'product_id' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.String value) {
    this.product_id = value;
  }

  /**
   * Gets the value of the 'product_title' field.
   * @return The value of the 'product_title' field.
   */
  public java.lang.String getProductTitle() {
    return product_title;
  }


  /**
   * Sets the value of the 'product_title' field.
   * @param value the value to set.
   */
  public void setProductTitle(java.lang.String value) {
    this.product_title = value;
  }

  /**
   * Gets the value of the 'count_one' field.
   * @return The value of the 'count_one' field.
   */
  public int getCountOne() {
    return count_one;
  }


  /**
   * Sets the value of the 'count_one' field.
   * @param value the value to set.
   */
  public void setCountOne(int value) {
    this.count_one = value;
  }

  /**
   * Gets the value of the 'count_two' field.
   * @return The value of the 'count_two' field.
   */
  public int getCountTwo() {
    return count_two;
  }


  /**
   * Sets the value of the 'count_two' field.
   * @param value the value to set.
   */
  public void setCountTwo(int value) {
    this.count_two = value;
  }

  /**
   * Gets the value of the 'count_three' field.
   * @return The value of the 'count_three' field.
   */
  public int getCountThree() {
    return count_three;
  }


  /**
   * Sets the value of the 'count_three' field.
   * @param value the value to set.
   */
  public void setCountThree(int value) {
    this.count_three = value;
  }

  /**
   * Gets the value of the 'count_four' field.
   * @return The value of the 'count_four' field.
   */
  public int getCountFour() {
    return count_four;
  }


  /**
   * Sets the value of the 'count_four' field.
   * @param value the value to set.
   */
  public void setCountFour(int value) {
    this.count_four = value;
  }

  /**
   * Gets the value of the 'count_five' field.
   * @return The value of the 'count_five' field.
   */
  public int getCountFive() {
    return count_five;
  }


  /**
   * Sets the value of the 'count_five' field.
   * @param value the value to set.
   */
  public void setCountFive(int value) {
    this.count_five = value;
  }

  /**
   * Gets the value of the 'total_reviews' field.
   * @return The value of the 'total_reviews' field.
   */
  public long getTotalReviews() {
    return total_reviews;
  }


  /**
   * Sets the value of the 'total_reviews' field.
   * @param value the value to set.
   */
  public void setTotalReviews(long value) {
    this.total_reviews = value;
  }

  /**
   * Gets the value of the 'total_rating' field.
   * @return The value of the 'total_rating' field.
   */
  public long getTotalRating() {
    return total_rating;
  }


  /**
   * Sets the value of the 'total_rating' field.
   * @param value the value to set.
   */
  public void setTotalRating(long value) {
    this.total_rating = value;
  }

  /**
   * Creates a new ProductStatistic RecordBuilder.
   * @return A new ProductStatistic RecordBuilder
   */
  public static common.avro.statistics.entities.ProductStatistic.Builder newBuilder() {
    return new common.avro.statistics.entities.ProductStatistic.Builder();
  }

  /**
   * Creates a new ProductStatistic RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductStatistic RecordBuilder
   */
  public static common.avro.statistics.entities.ProductStatistic.Builder newBuilder(common.avro.statistics.entities.ProductStatistic.Builder other) {
    if (other == null) {
      return new common.avro.statistics.entities.ProductStatistic.Builder();
    } else {
      return new common.avro.statistics.entities.ProductStatistic.Builder(other);
    }
  }

  /**
   * Creates a new ProductStatistic RecordBuilder by copying an existing ProductStatistic instance.
   * @param other The existing instance to copy.
   * @return A new ProductStatistic RecordBuilder
   */
  public static common.avro.statistics.entities.ProductStatistic.Builder newBuilder(common.avro.statistics.entities.ProductStatistic other) {
    if (other == null) {
      return new common.avro.statistics.entities.ProductStatistic.Builder();
    } else {
      return new common.avro.statistics.entities.ProductStatistic.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductStatistic instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductStatistic>
    implements org.apache.avro.data.RecordBuilder<ProductStatistic> {

    private java.lang.String product_id;
    private java.lang.String product_title;
    private int count_one;
    private int count_two;
    private int count_three;
    private int count_four;
    private int count_five;
    private long total_reviews;
    private long total_rating;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(common.avro.statistics.entities.ProductStatistic.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.product_title)) {
        this.product_title = data().deepCopy(fields()[1].schema(), other.product_title);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.count_one)) {
        this.count_one = data().deepCopy(fields()[2].schema(), other.count_one);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.count_two)) {
        this.count_two = data().deepCopy(fields()[3].schema(), other.count_two);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.count_three)) {
        this.count_three = data().deepCopy(fields()[4].schema(), other.count_three);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.count_four)) {
        this.count_four = data().deepCopy(fields()[5].schema(), other.count_four);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.count_five)) {
        this.count_five = data().deepCopy(fields()[6].schema(), other.count_five);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.total_reviews)) {
        this.total_reviews = data().deepCopy(fields()[7].schema(), other.total_reviews);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.total_rating)) {
        this.total_rating = data().deepCopy(fields()[8].schema(), other.total_rating);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductStatistic instance
     * @param other The existing instance to copy.
     */
    private Builder(common.avro.statistics.entities.ProductStatistic other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.product_title)) {
        this.product_title = data().deepCopy(fields()[1].schema(), other.product_title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.count_one)) {
        this.count_one = data().deepCopy(fields()[2].schema(), other.count_one);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.count_two)) {
        this.count_two = data().deepCopy(fields()[3].schema(), other.count_two);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.count_three)) {
        this.count_three = data().deepCopy(fields()[4].schema(), other.count_three);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.count_four)) {
        this.count_four = data().deepCopy(fields()[5].schema(), other.count_four);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.count_five)) {
        this.count_five = data().deepCopy(fields()[6].schema(), other.count_five);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.total_reviews)) {
        this.total_reviews = data().deepCopy(fields()[7].schema(), other.total_reviews);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.total_rating)) {
        this.total_rating = data().deepCopy(fields()[8].schema(), other.total_rating);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'product_id' field.
      * @return The value.
      */
    public java.lang.String getProductId() {
      return product_id;
    }


    /**
      * Sets the value of the 'product_id' field.
      * @param value The value of 'product_id'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setProductId(java.lang.String value) {
      validate(fields()[0], value);
      this.product_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'product_id' field has been set.
      * @return True if the 'product_id' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'product_id' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearProductId() {
      product_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'product_title' field.
      * @return The value.
      */
    public java.lang.String getProductTitle() {
      return product_title;
    }


    /**
      * Sets the value of the 'product_title' field.
      * @param value The value of 'product_title'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setProductTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.product_title = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'product_title' field has been set.
      * @return True if the 'product_title' field has been set, false otherwise.
      */
    public boolean hasProductTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'product_title' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearProductTitle() {
      product_title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'count_one' field.
      * @return The value.
      */
    public int getCountOne() {
      return count_one;
    }


    /**
      * Sets the value of the 'count_one' field.
      * @param value The value of 'count_one'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setCountOne(int value) {
      validate(fields()[2], value);
      this.count_one = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'count_one' field has been set.
      * @return True if the 'count_one' field has been set, false otherwise.
      */
    public boolean hasCountOne() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'count_one' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearCountOne() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'count_two' field.
      * @return The value.
      */
    public int getCountTwo() {
      return count_two;
    }


    /**
      * Sets the value of the 'count_two' field.
      * @param value The value of 'count_two'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setCountTwo(int value) {
      validate(fields()[3], value);
      this.count_two = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'count_two' field has been set.
      * @return True if the 'count_two' field has been set, false otherwise.
      */
    public boolean hasCountTwo() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'count_two' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearCountTwo() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'count_three' field.
      * @return The value.
      */
    public int getCountThree() {
      return count_three;
    }


    /**
      * Sets the value of the 'count_three' field.
      * @param value The value of 'count_three'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setCountThree(int value) {
      validate(fields()[4], value);
      this.count_three = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'count_three' field has been set.
      * @return True if the 'count_three' field has been set, false otherwise.
      */
    public boolean hasCountThree() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'count_three' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearCountThree() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'count_four' field.
      * @return The value.
      */
    public int getCountFour() {
      return count_four;
    }


    /**
      * Sets the value of the 'count_four' field.
      * @param value The value of 'count_four'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setCountFour(int value) {
      validate(fields()[5], value);
      this.count_four = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'count_four' field has been set.
      * @return True if the 'count_four' field has been set, false otherwise.
      */
    public boolean hasCountFour() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'count_four' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearCountFour() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'count_five' field.
      * @return The value.
      */
    public int getCountFive() {
      return count_five;
    }


    /**
      * Sets the value of the 'count_five' field.
      * @param value The value of 'count_five'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setCountFive(int value) {
      validate(fields()[6], value);
      this.count_five = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'count_five' field has been set.
      * @return True if the 'count_five' field has been set, false otherwise.
      */
    public boolean hasCountFive() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'count_five' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearCountFive() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_reviews' field.
      * @return The value.
      */
    public long getTotalReviews() {
      return total_reviews;
    }


    /**
      * Sets the value of the 'total_reviews' field.
      * @param value The value of 'total_reviews'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setTotalReviews(long value) {
      validate(fields()[7], value);
      this.total_reviews = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'total_reviews' field has been set.
      * @return True if the 'total_reviews' field has been set, false otherwise.
      */
    public boolean hasTotalReviews() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'total_reviews' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearTotalReviews() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_rating' field.
      * @return The value.
      */
    public long getTotalRating() {
      return total_rating;
    }


    /**
      * Sets the value of the 'total_rating' field.
      * @param value The value of 'total_rating'.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder setTotalRating(long value) {
      validate(fields()[8], value);
      this.total_rating = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'total_rating' field has been set.
      * @return True if the 'total_rating' field has been set, false otherwise.
      */
    public boolean hasTotalRating() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'total_rating' field.
      * @return This builder.
      */
    public common.avro.statistics.entities.ProductStatistic.Builder clearTotalRating() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductStatistic build() {
      try {
        ProductStatistic record = new ProductStatistic();
        record.product_id = fieldSetFlags()[0] ? this.product_id : (java.lang.String) defaultValue(fields()[0]);
        record.product_title = fieldSetFlags()[1] ? this.product_title : (java.lang.String) defaultValue(fields()[1]);
        record.count_one = fieldSetFlags()[2] ? this.count_one : (java.lang.Integer) defaultValue(fields()[2]);
        record.count_two = fieldSetFlags()[3] ? this.count_two : (java.lang.Integer) defaultValue(fields()[3]);
        record.count_three = fieldSetFlags()[4] ? this.count_three : (java.lang.Integer) defaultValue(fields()[4]);
        record.count_four = fieldSetFlags()[5] ? this.count_four : (java.lang.Integer) defaultValue(fields()[5]);
        record.count_five = fieldSetFlags()[6] ? this.count_five : (java.lang.Integer) defaultValue(fields()[6]);
        record.total_reviews = fieldSetFlags()[7] ? this.total_reviews : (java.lang.Long) defaultValue(fields()[7]);
        record.total_rating = fieldSetFlags()[8] ? this.total_rating : (java.lang.Long) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductStatistic>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductStatistic>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductStatistic>
    READER$ = (org.apache.avro.io.DatumReader<ProductStatistic>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.product_id);

    out.writeString(this.product_title);

    out.writeInt(this.count_one);

    out.writeInt(this.count_two);

    out.writeInt(this.count_three);

    out.writeInt(this.count_four);

    out.writeInt(this.count_five);

    out.writeLong(this.total_reviews);

    out.writeLong(this.total_rating);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.product_id = in.readString();

      this.product_title = in.readString();

      this.count_one = in.readInt();

      this.count_two = in.readInt();

      this.count_three = in.readInt();

      this.count_four = in.readInt();

      this.count_five = in.readInt();

      this.total_reviews = in.readLong();

      this.total_rating = in.readLong();

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.product_id = in.readString();
          break;

        case 1:
          this.product_title = in.readString();
          break;

        case 2:
          this.count_one = in.readInt();
          break;

        case 3:
          this.count_two = in.readInt();
          break;

        case 4:
          this.count_three = in.readInt();
          break;

        case 5:
          this.count_four = in.readInt();
          break;

        case 6:
          this.count_five = in.readInt();
          break;

        case 7:
          this.total_reviews = in.readLong();
          break;

        case 8:
          this.total_rating = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










