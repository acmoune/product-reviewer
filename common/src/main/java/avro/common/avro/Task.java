/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package common.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Task extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3689405960140870941L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Task\",\"namespace\":\"common.avro\",\"fields\":[{\"name\":\"task_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"resource_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"error_message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"created_at\",\"type\":\"long\"},{\"name\":\"updated_at\",\"type\":[\"null\",\"long\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Task> ENCODER =
      new BinaryMessageEncoder<Task>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Task> DECODER =
      new BinaryMessageDecoder<Task>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Task> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Task> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Task> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Task>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Task to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Task from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Task instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Task fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String task_id;
  @Deprecated public java.lang.String resource_id;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.String error_message;
  @Deprecated public long created_at;
  @Deprecated public java.lang.Long updated_at;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Task() {}

  /**
   * All-args constructor.
   * @param task_id The new value for task_id
   * @param resource_id The new value for resource_id
   * @param status The new value for status
   * @param error_message The new value for error_message
   * @param created_at The new value for created_at
   * @param updated_at The new value for updated_at
   */
  public Task(java.lang.String task_id, java.lang.String resource_id, java.lang.String status, java.lang.String error_message, java.lang.Long created_at, java.lang.Long updated_at) {
    this.task_id = task_id;
    this.resource_id = resource_id;
    this.status = status;
    this.error_message = error_message;
    this.created_at = created_at;
    this.updated_at = updated_at;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return task_id;
    case 1: return resource_id;
    case 2: return status;
    case 3: return error_message;
    case 4: return created_at;
    case 5: return updated_at;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: task_id = (java.lang.String)value$; break;
    case 1: resource_id = (java.lang.String)value$; break;
    case 2: status = (java.lang.String)value$; break;
    case 3: error_message = (java.lang.String)value$; break;
    case 4: created_at = (java.lang.Long)value$; break;
    case 5: updated_at = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'task_id' field.
   * @return The value of the 'task_id' field.
   */
  public java.lang.String getTaskId() {
    return task_id;
  }


  /**
   * Sets the value of the 'task_id' field.
   * @param value the value to set.
   */
  public void setTaskId(java.lang.String value) {
    this.task_id = value;
  }

  /**
   * Gets the value of the 'resource_id' field.
   * @return The value of the 'resource_id' field.
   */
  public java.lang.String getResourceId() {
    return resource_id;
  }


  /**
   * Sets the value of the 'resource_id' field.
   * @param value the value to set.
   */
  public void setResourceId(java.lang.String value) {
    this.resource_id = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'error_message' field.
   * @return The value of the 'error_message' field.
   */
  public java.lang.String getErrorMessage() {
    return error_message;
  }


  /**
   * Sets the value of the 'error_message' field.
   * @param value the value to set.
   */
  public void setErrorMessage(java.lang.String value) {
    this.error_message = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public long getCreatedAt() {
    return created_at;
  }


  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(long value) {
    this.created_at = value;
  }

  /**
   * Gets the value of the 'updated_at' field.
   * @return The value of the 'updated_at' field.
   */
  public java.lang.Long getUpdatedAt() {
    return updated_at;
  }


  /**
   * Sets the value of the 'updated_at' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.lang.Long value) {
    this.updated_at = value;
  }

  /**
   * Creates a new Task RecordBuilder.
   * @return A new Task RecordBuilder
   */
  public static common.avro.Task.Builder newBuilder() {
    return new common.avro.Task.Builder();
  }

  /**
   * Creates a new Task RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Task RecordBuilder
   */
  public static common.avro.Task.Builder newBuilder(common.avro.Task.Builder other) {
    if (other == null) {
      return new common.avro.Task.Builder();
    } else {
      return new common.avro.Task.Builder(other);
    }
  }

  /**
   * Creates a new Task RecordBuilder by copying an existing Task instance.
   * @param other The existing instance to copy.
   * @return A new Task RecordBuilder
   */
  public static common.avro.Task.Builder newBuilder(common.avro.Task other) {
    if (other == null) {
      return new common.avro.Task.Builder();
    } else {
      return new common.avro.Task.Builder(other);
    }
  }

  /**
   * RecordBuilder for Task instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Task>
    implements org.apache.avro.data.RecordBuilder<Task> {

    private java.lang.String task_id;
    private java.lang.String resource_id;
    private java.lang.String status;
    private java.lang.String error_message;
    private long created_at;
    private java.lang.Long updated_at;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(common.avro.Task.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.task_id)) {
        this.task_id = data().deepCopy(fields()[0].schema(), other.task_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.resource_id)) {
        this.resource_id = data().deepCopy(fields()[1].schema(), other.resource_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.error_message)) {
        this.error_message = data().deepCopy(fields()[3].schema(), other.error_message);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.created_at)) {
        this.created_at = data().deepCopy(fields()[4].schema(), other.created_at);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[5].schema(), other.updated_at);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing Task instance
     * @param other The existing instance to copy.
     */
    private Builder(common.avro.Task other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.task_id)) {
        this.task_id = data().deepCopy(fields()[0].schema(), other.task_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.resource_id)) {
        this.resource_id = data().deepCopy(fields()[1].schema(), other.resource_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.status)) {
        this.status = data().deepCopy(fields()[2].schema(), other.status);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.error_message)) {
        this.error_message = data().deepCopy(fields()[3].schema(), other.error_message);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.created_at)) {
        this.created_at = data().deepCopy(fields()[4].schema(), other.created_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.updated_at)) {
        this.updated_at = data().deepCopy(fields()[5].schema(), other.updated_at);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'task_id' field.
      * @return The value.
      */
    public java.lang.String getTaskId() {
      return task_id;
    }


    /**
      * Sets the value of the 'task_id' field.
      * @param value The value of 'task_id'.
      * @return This builder.
      */
    public common.avro.Task.Builder setTaskId(java.lang.String value) {
      validate(fields()[0], value);
      this.task_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'task_id' field has been set.
      * @return True if the 'task_id' field has been set, false otherwise.
      */
    public boolean hasTaskId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'task_id' field.
      * @return This builder.
      */
    public common.avro.Task.Builder clearTaskId() {
      task_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'resource_id' field.
      * @return The value.
      */
    public java.lang.String getResourceId() {
      return resource_id;
    }


    /**
      * Sets the value of the 'resource_id' field.
      * @param value The value of 'resource_id'.
      * @return This builder.
      */
    public common.avro.Task.Builder setResourceId(java.lang.String value) {
      validate(fields()[1], value);
      this.resource_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'resource_id' field has been set.
      * @return True if the 'resource_id' field has been set, false otherwise.
      */
    public boolean hasResourceId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'resource_id' field.
      * @return This builder.
      */
    public common.avro.Task.Builder clearResourceId() {
      resource_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public common.avro.Task.Builder setStatus(java.lang.String value) {
      validate(fields()[2], value);
      this.status = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public common.avro.Task.Builder clearStatus() {
      status = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'error_message' field.
      * @return The value.
      */
    public java.lang.String getErrorMessage() {
      return error_message;
    }


    /**
      * Sets the value of the 'error_message' field.
      * @param value The value of 'error_message'.
      * @return This builder.
      */
    public common.avro.Task.Builder setErrorMessage(java.lang.String value) {
      validate(fields()[3], value);
      this.error_message = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'error_message' field has been set.
      * @return True if the 'error_message' field has been set, false otherwise.
      */
    public boolean hasErrorMessage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'error_message' field.
      * @return This builder.
      */
    public common.avro.Task.Builder clearErrorMessage() {
      error_message = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public long getCreatedAt() {
      return created_at;
    }


    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public common.avro.Task.Builder setCreatedAt(long value) {
      validate(fields()[4], value);
      this.created_at = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public common.avro.Task.Builder clearCreatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'updated_at' field.
      * @return The value.
      */
    public java.lang.Long getUpdatedAt() {
      return updated_at;
    }


    /**
      * Sets the value of the 'updated_at' field.
      * @param value The value of 'updated_at'.
      * @return This builder.
      */
    public common.avro.Task.Builder setUpdatedAt(java.lang.Long value) {
      validate(fields()[5], value);
      this.updated_at = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'updated_at' field has been set.
      * @return True if the 'updated_at' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'updated_at' field.
      * @return This builder.
      */
    public common.avro.Task.Builder clearUpdatedAt() {
      updated_at = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Task build() {
      try {
        Task record = new Task();
        record.task_id = fieldSetFlags()[0] ? this.task_id : (java.lang.String) defaultValue(fields()[0]);
        record.resource_id = fieldSetFlags()[1] ? this.resource_id : (java.lang.String) defaultValue(fields()[1]);
        record.status = fieldSetFlags()[2] ? this.status : (java.lang.String) defaultValue(fields()[2]);
        record.error_message = fieldSetFlags()[3] ? this.error_message : (java.lang.String) defaultValue(fields()[3]);
        record.created_at = fieldSetFlags()[4] ? this.created_at : (java.lang.Long) defaultValue(fields()[4]);
        record.updated_at = fieldSetFlags()[5] ? this.updated_at : (java.lang.Long) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Task>
    WRITER$ = (org.apache.avro.io.DatumWriter<Task>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Task>
    READER$ = (org.apache.avro.io.DatumReader<Task>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.task_id);

    out.writeString(this.resource_id);

    out.writeString(this.status);

    out.writeString(this.error_message);

    out.writeLong(this.created_at);

    if (this.updated_at == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.updated_at);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.task_id = in.readString();

      this.resource_id = in.readString();

      this.status = in.readString();

      this.error_message = in.readString();

      this.created_at = in.readLong();

      if (in.readIndex() != 1) {
        in.readNull();
        this.updated_at = null;
      } else {
        this.updated_at = in.readLong();
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.task_id = in.readString();
          break;

        case 1:
          this.resource_id = in.readString();
          break;

        case 2:
          this.status = in.readString();
          break;

        case 3:
          this.error_message = in.readString();
          break;

        case 4:
          this.created_at = in.readLong();
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.updated_at = null;
          } else {
            this.updated_at = in.readLong();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










